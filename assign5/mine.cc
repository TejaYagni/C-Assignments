/********************************
   Name:       Saiteja Yagni
   Class:      CSCI 689/1
   TA Name:    Anthony Schroeder
   Assignment: 05
   Due Date:   02/26/2016
*********************************/
#include"header.h" // User defined header file which contain function proto types, libraries that this program needs
#include<iostream>
#include<vector> //this function is used as vector are needed
#include<cstdlib>
#include<iomanip> // this header file is used as setprecision function is needed

using std::cin;
using std::cout;
using std::endl;
using std::fixed; //This is required to display decimal points of a floating point number
using std::setprecision; // This is required to set double with limited number after decimal

/**********************************************************************************************************************************************************************
FUNCTION NAME: buildMineField
RETURN TYPE: void
ARGUMENTS: vector<vector<bool> >&, double
NOTES: This function takes a vector of vector of bool  and a double as arguments. This vector is filled by using the random number generated by rand and the double value that is send as argument to this function. If the random number generated is less than the double value then 1 is enter into the vector else 0 is. In this way the entire vector is filled.
**********************************************************************************************************************************************************************/
void buildMineField(vector<vector<bool> >&Abc,double prob_mine)
{
  time_t t;
  double k;
  
  char a='-';
  cout<<"Mine Locations: size = "<<Abc.size()<<" x "<<Abc.size()<<", prob of mine = "<<fixed<<setprecision(2)<<prob_mine<<endl;
  srand(1);
  for(unsigned int i=0;i<Abc.size();++i)
    {
      
      for(unsigned int j=0;j<Abc.size();++j)
	{
	  
	  k=rand()/(double(RAND_MAX)+1); //Random number is generated
	  if(k<prob_mine) //If the random number is less than the input double value then this control statement is executed
	    Abc[i][j] = true;
	  if(k>prob_mine) //If the random number is greater than input double value then this control statement is executed
	    Abc[i][j] = false;
	  
	} 
    }
		
}
/**********************************************************************************************************************************************************************
FUNCTION NAME: displayMineLocations
RETURN TYPE: void
ARGUMENTS: vector<vector<bool> >&
NOTES: This function takes vector < vector <bool> > as argument then displays it on to the output stream. Inside the function a vector of vector of chars is defined so as to fill it with required values based on the values from the 2D vector or grid that is given as argument
**********************************************************************************************************************************************************************/
void displayMineLocations(vector< vector <bool> >&Abc)
{
  vector< vector< char > > Ghi(Abc.size(), vector< char >(Abc.size(),0)); //vector of vector of chars to accomodate values and display it on the output screen
  char a='-';
  
  for(unsigned int i=0;i<Ghi.size();++i)
    {
      /*used to create the borders around the output*/
      cout<<"   ";
      for(unsigned int p=0;p<(6*Ghi.size())-2;p++)
	{
	  cout<<a;
	}
      cout<<a<<endl;
      for(unsigned int p=0;p<Ghi.size();p++)
	{
	  cout<<"  |   ";
	}
      cout<<"  |   "<<endl;
      for(unsigned int j=0;j<Ghi.size();++j)
	{
	  
	  if(Abc[i][j]==false)
	    {
	      Ghi[i][j]=' ';//Intialised to space so as not to show anything
	      
	    }
	  if(Abc[i][j]==true)
	    {
	      Ghi[i][j]='X';//Intialised to 'X' so as to represent the mine location
	    }
	  cout<<"  |  "<<Ghi[i][j]; //Displays  the mine location
	}
      cout<<"  |  "<<endl;
      for(unsigned int q=0;q<Ghi.size();q++)
	{
	  cout<<"  |   ";
	}
      cout<<"  |   "<<endl;
    }
  cout<<"   ";

  for(unsigned int p=0;p<(6*Ghi.size()-2);p++)
    {
      cout<<a;
    }
  cout<<a<<endl;	
}



